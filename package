#!/usr/bin/env ruby
# 
# Copyright (c) 2011 FadingRed LLC
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# 

require 'fileutils'

class Packager < Object
	def run
		puts "Building project (this may take a while)..."
		command = %w(xcodebuild) +
			%w(-target Package) +
			%w(-configuration Release) +
			%w(-project Framework/Greenwich.xcodeproj)
		File.open "greenwich.build", :mode => "w" do |output|
			IO.popen command + [:err=>[:child, :out]] do |io|
				begin
					while line = io.readline
						output.write line
						puts line if line =~ /^(Test|warning:)/
					end
				rescue EOFError
					# finished reading
				end
			end
		end
		raise Exception.new("Build failed") if $?.exitstatus != 0
		puts "Packaging complete."
	end
	
	def build
		outdir = File.join ENV["PROJECT_DIR"], '..'
		version = ENV["GREENWICH_VERSION"]
		framework = File.join ENV["BUILT_PRODUCTS_DIR"], "Greenwich.framework"
		scripts = File.join ENV["PROJECT_DIR"], "Scripts"
		framework_archive = File.join outdir, "greenwich_#{version}.tbz"
		dsym_archive = File.join outdir, "greenwich_#{version}.dsym.tbz"
		
		if ENV["CONFIGURATION"] == "Release"
			puts "creating packages..."
			Dir.chdir ENV["BUILT_PRODUCTS_DIR"] do
				FileUtils.rm_rf "Greenwich"
				FileUtils.mkdir_p "Greenwich"
				FileUtils.mv framework, "Greenwich"
				FileUtils.cp_r scripts, "Greenwich", :preserve => true
				tbz ["Greenwich"], :output => framework_archive
				tbz Dir.glob("*.dSYM"), :output => dsym_archive
			end
		else
			puts "need to build as a release!"
			exit 1
		end
	end
	
	private
	
	def zip(files, options={})
		output = options[:output]
		output = File.basename(files[0]) unless output
		command = %w(zip -ryq) + [output] + files
		raise Exception.new("Archive failure") unless system *command
	end

	def tbz(files, options={})
		output = options[:output]
		output = File.basename(files[0]) unless output
		command = %w(tar cjf) + [output] + files
		raise Exception.new("Archive failure") unless system *command
	end
end

if __FILE__ == $PROGRAM_NAME
	if ARGV.length == 1 && ARGV[0] == "build"
		Packager.new.build
	elsif ARGV.length == 0
		Packager.new.run
	else
		$stderr.puts "usage: package [build]"
		exit 1
	end
end
